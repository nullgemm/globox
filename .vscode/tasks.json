{
	"tasks": [
		// # library
		// ## development
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS development software library makefile",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"osxcross",
				"osxcross"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development software library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"native",
				"native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development software library makefile",
			"command": "./make/lib/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development software library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development software library makefile",
			"command": "./make/lib/gen/gen_wayland.sh",
			"args": [
				"development",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development software library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"development",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS development EGL library makefile",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"osxcross",
				"osxcross"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development EGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"native",
				"native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development EGL library makefile",
			"command": "./make/lib/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development EGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development EGL library makefile",
			"command": "./make/lib/gen/gen_wayland.sh",
			"args": [
				"development",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development EGL library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"development",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows development WGL library makefile",
			"command": "./make/lib/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development WGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development GLX library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"development",
				"glx"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## release
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS release software library makefile",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"osxcross",
				"osxcross"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release software library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"native",
				"native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release software library makefile",
			"command": "./make/lib/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release software library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release software library makefile",
			"command": "./make/lib/gen/gen_wayland.sh",
			"args": [
				"release",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release software library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"release",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS release EGL globox makefile",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"osxcross",
				"osxcross"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release EGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"native",
				"native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release EGL library makefile",
			"command": "./make/lib/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release EGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release EGL library makefile",
			"command": "./make/lib/gen/gen_wayland.sh",
			"args": [
				"release",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release EGL library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"release",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows release WGL library makefile",
			"command": "./make/lib/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release WGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release GLX library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"release",
				"glx"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## sanitized
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized software library makefile",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"osxcross",
				"osxcross"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized software library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"native",
				"native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized software library makefile",
			"command": "./make/lib/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized software library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized EGL library makefile",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"osxcross",
				"osxcross"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized EGL library makefile (native toolchain)",
			"command": "./make/lib/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"native",
				"native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized EGL library makefile",
			"command": "./make/lib/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized EGL library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized GLX library makefile",
			"command": "./make/lib/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"glx"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// # simple example (static)
		// ## development
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS development simple static software example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development simple static software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple static software example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple static software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development simple static software example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"development",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development simple static software example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"development",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS development simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development simple static EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple static EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"development",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"development",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows development simple static WGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"wgl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple static WGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development simple static GLX example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"development",
				"glx",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## release
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS release simple static software example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release simple static software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple static software example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple static software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release simple static software example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"release",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release simple static software example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"release",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS release simple static EGL globox makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release simple static EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple static EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"release",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"release",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows release simple static WGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"wgl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple static WGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release simple static GLX example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"release",
				"glx",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## sanitized
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple static software example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple static software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized simple static software example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized simple static software example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple static EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized simple static EGL example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized simple static GLX example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"glx",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// # complex example (static)
		// ## development
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS development complex static software example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development complex static software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex static software example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex static software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development complex static software example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"development",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development complex static software example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"development",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS development complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development complex static EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex static EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"development",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"development",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows development complex static WGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"wgl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex static WGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_windows_msvc.sh",
			"args": [
				"development",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development complex static GLX example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"development",
				"glx",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## release
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS release complex static software example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release complex static software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex static software example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex static software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release complex static software example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"release",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release complex static software example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"release",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS release complex static EGL globox makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release complex static EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex static EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"release",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"release",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows release complex static WGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"wgl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex static WGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_windows_msvc.sh",
			"args": [
				"release",
				"wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release complex static GLX example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"release",
				"glx",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## sanitized
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex static software example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex static software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized complex static software example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized complex static software example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"software",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"osxcross",
				"osxcross",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex static EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"native",
				"native",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized complex static EGL example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"egl",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized complex static GLX example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"glx",
				"static"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// # simple example (shared)
		// ## development
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS development simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development simple shared software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"development",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"development",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS development simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development simple shared EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"development",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"development",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows development simple shared WGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"wgl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development simple shared GLX example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"development",
				"glx",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## release
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS release simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release simple shared software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"release",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"release",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS release simple shared EGL globox makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release simple shared EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"release",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"release",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows release simple shared WGL example makefile",
			"command": "./make/example/simple/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"wgl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release simple shared GLX example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"release",
				"glx",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## sanitized
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple shared software example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized simple shared software example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized simple shared EGL example makefile (native toolchain)",
			"command": "./make/example/simple/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized simple shared EGL example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized simple shared GLX example makefile",
			"command": "./make/example/simple/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"glx",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// # complex example (shared)
		// ## development
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS development complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development complex shared software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"software",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"development",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"development",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS development complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS development complex shared EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"development",
				"egl",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows development complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland development complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"development",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"development",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows development complex shared WGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"development",
				"wgl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 development complex shared GLX example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"development",
				"glx",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## release
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS release complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release complex shared software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"software",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"release",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"release",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS release complex shared EGL globox makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS release complex shared EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"release",
				"egl",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Windows release complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland release complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"release",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"release",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate Windows release complex shared WGL example makefile",
			"command": "./make/example/complex/gen/gen_windows_mingw.sh",
			"args": [
				"release",
				"wgl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 release complex shared GLX example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"release",
				"glx",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ## sanitized
		// ### software
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex shared software example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"software",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized complex shared software example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"software",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### EGL
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"osxcross",
				"osxcross",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate macOS sanitized complex shared EGL example makefile (native toolchain)",
			"command": "./make/example/complex/gen/gen_macos.sh",
			"args": [
				"sanitized",
				"egl",
				"native",
				"native",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland sanitized complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_wayland.sh",
			"args": [
				"sanitized",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized complex shared EGL example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"egl",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// ### platform-specific loader
		{
			"type": "cppbuild",
			"label": "generate X11 sanitized complex shared GLX example makefile",
			"command": "./make/example/complex/gen/gen_x11.sh",
			"args": [
				"sanitized",
				"glx",
				"shared"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// # utils
		{
			"type": "cppbuild",
			"label": "clean compiled objects",
			"command": "./make/scripts/clean.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "clean generated makefiles",
			"command": "./make/scripts/clean_makefiles.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "get metalANGLE binaries",
			"command": "./make/scripts/angle_dev_get.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "build regular ANGLE binaries from source",
			"command": "./make/scripts/angle_dev_make.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "get regular ANGLE binaries from chromium's latest release",
			"command": "./make/scripts/angle_master_get.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "get EGL",
			"command": "./make/scripts/egl_get.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "get EGLproxy",
			"command": "./make/scripts/eglproxy_get.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "build objconv from source",
			"command": "./make/scripts/objconv_make.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "binarize icon pixmaps",
			"command": "./make/scripts/pixmap_bin.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "copy globox headers in the library folder",
			"command": "./make/scripts/release_headers.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "zip the globox library folder for release",
			"command": "./make/scripts/release_zip.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "generate Wayland headers",
			"command": "./make/scripts/wayland_get.sh",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		// # symlinks
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS software library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_macos_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS software library (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_macos_software_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows software library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_windows_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows library (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_windows_software_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Wayland software library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_wayland_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 software library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_x11_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS EGL library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_macos_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS EGL library (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_macos_egl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows EGL library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_windows_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows EGL library (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_windows_egl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Wayland EGL library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_wayland_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 EGL library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_x11_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows WGL library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_windows_wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows WGL library (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_windows_wgl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 GLX library",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_lib_x11_glx"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS simple software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_macos_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS simple software example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_macos_software_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows simple software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_windows_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows simple software example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_windows_software_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Wayland simple software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_wayland_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 simple software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_x11_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS simple EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_macos_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS simple EGL example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_macos_egl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows simple EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_windows_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows simple EGL example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_windows_egl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Wayland simple EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_wayland_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 simple EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_x11_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows simple WGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_windows_wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows simple WGL example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_windows_wgl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 simple GLX example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_simple_x11_glx"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS complex software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_macos_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS complex software example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_macos_software_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows complex software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_windows_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows complex software example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_windows_software_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Wayland complex software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_wayland_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 complex software example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_x11_software"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS complex EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_macos_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to macOS complex EGL example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_macos_egl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows complex EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_windows_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows complex EGL example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_windows_egl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Wayland complex EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_wayland_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 complex EGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_x11_egl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows WGL example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_windows_wgl"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to Windows complex WGL example (native toolchain)",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_windows_wgl_native"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		},
		{
			"type": "cppbuild",
			"label": "symlink default makefile to X11 complex GLX example",
			"command": "./make/scripts/makefile_ln.sh",
			"args": [
				"makefile_example_complex_x11_glx"
			],
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"group": {
				"kind": "build"
			}
		}
	],
	"version": "2.0.0"
}
